<!--
The MIT License

Copyright (c) 2009-2011, Timothy Bingaman

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:g="glide" xmlns:i="jelly:fmt">
  <!--<j:if test="${section.name.length() > 0 and !section.hasStyle()}">
    <h2><j:out value="${app.markupFormatter.translate(section.name)}"/></h2>
  </j:if>
    <table style="border: none; margin: 0; padding: 0;">
      <tr>
        <td>
          <div class="${section.style.cssClass}">
            <j:if test="${section.name.length() > 0 and section.hasStyle()}">
              <h3><j:out value="${app.markupFormatter.translate(section.name)}"/></h3>
            </j:if>
            <div style="white-space: normal"><j:out value="${app.markupFormatter.translate(section.text)}"/></div>
          </div>
        </td>
      </tr>
    </table>-->

  <html lang="en">
    <head>
      <title>Jenkins - AppFactory</title>
      <meta charset="utf-8"/>
      <meta name="viewport" content="width=device-width, initial-scale=1"/>
      <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"/>
      <link rel="stylesheet" href="${rootURL}/plugin/KonyCustomView/app-factory/css/fontface/fontface.css"/>
      <link rel="stylesheet" href="${rootURL}/plugin/KonyCustomView/app-factory/css/styles.css"/>
      <link rel="stylesheet" href="${rootURL}/plugin/KonyCustomView/app-factory/css/theme.css"/>

      <script src="${rootURL}/plugin/KonyCustomView/app-factory/js/jquery.min.js"></script>
      <script src="${rootURL}/plugin/KonyCustomView/app-factory/js/jquery-ui.js"></script>
      <script src="https://npmcdn.com/tether@1.2.4/dist/js/tether.min.js"></script>
      <script src="${rootURL}/plugin/KonyCustomView/app-factory/js/bootstrap.min.js"></script>
      <script src="${rootURL}/plugin/KonyCustomView/app-factory/js/CustomHook.js"></script>


      <script>
         var foo;
         if (window.makeStaplerProxy) {
             window.__old__makeStaplerProxy = window.makeStaplerProxy;
             window.makeStaplerProxy = CustomView.makeStaplerProxy2;
         }
         foo = <st:bind value="${section}"/> ;
         if (window.makeStaplerProxy) {
             window.makeStaplerProxy = window.__old__makeStaplerProxy;
         }

         function correctStage(stage) {
          var tempStage = "";
          if (stage == "Hook Point PreBuild") {
              tempStage = "PRE_BUILD";
          } else if (stage == "Hook Point PostBuild") {
              tempStage = "POST_BUILD";
          } else {
              tempStage = "POST_TEST";
          }

          return tempStage
        }

         $(document).ready(function() {
               console.info("Inside Ready Function ")
               $('.app-factory').parent().parent().css('clear', 'none');
               $('.hook-point-container').each(
                   function(index, element) {
                       var stage = $(this).find('.label-header').text();

                       $(this).find('.hook-label').each(function(name, val) {
                           var hookName = $(this).text();
                           var x = foo.hookStatus(correctStage(stage), hookName , function(t){
                              var status = t.responseObject();
                                  if(status == "false"){
                                   $(val).parent().parent().parent().addClass("disabled");
                                    $(val).parent().siblings('.action-icons').children('.icon-set').addClass('d-none');
                                    $(val).parent().siblings('.action-icons').children('.icon-set').removeClass('icon-set');
                                    $(val).parent().siblings('.action-icons').children('.icon-disable-set').removeClass('d-none');
                                    console.info(name + " - >"+ val);
                                  }
                                  else{
                                      console.info(" ->"+ correctStage(stage) + "->"+ hookName +" ->"+ status);
                                  }
                           });

                       });
                   }
               )
          });

        function deleteHook(){
          var x = $(".tempDeleteClass").text()
          var res = x.split(",")
          var hookName = res[0];
          var hookStage = res[1];
          foo.deleteHook(hookName, hookStage)

        }
        function undoDeleteHook(){
          $(".tempDeleteClass").removeClass("tempDeleteClass")
        }
      </script>
      <script>
        crumb.init("${h.getCrumbRequestField()}", "${h.getCrumb(request)}");
      </script>
    </head>
    <body>
      <section class="app-factory">
        <div class="container-fluid">
          <div class="row">
            <div class="col-sm-12 main-content max-width mb-30">
              <section class="main-content-panel">
                <section class="custom-hook mt-50 ml-50">
                  <div class="row">
                    <div class="blocks-sm di-block">
                      <div class="process">
                        <div class="hook-icon w-100">
                          <i class="icon-support-process di-block icon48"></i>
                        </div>
                        <div class="hook-name ext-center">
                          Support CI Process
                          <div class="process-bar"></div>
                        </div>
                      </div>
                    </div>
                    <div class="blocks-big di-block">
                      <div class="process">
                        <div class="hook-icon w-100">
                          <i class="icon-build di-block icon48"></i>
                        </div>
                        <div class="hook-name ext-center">
                          Build
                          <div class="process-bar"></div>
                        </div>
                      </div>
                    </div>
                    <div class="blocks-sm di-block">
                      <div class="process">
                        <div class="hook-icon w-100">
                          <i class="icon-test di-block icon48"></i>
                        </div>
                        <div class="hook-name ext-center">
                          Test Complete
                          <div class="process-bar"></div>
                        </div>
                      </div>
                    </div>
                    <div class="blocks-sm di-block">
                      <div class="process">
                        <div class="hook-icon w-100">
                          <i class="icon-deploy di-block icon48"></i>
                        </div>
                        <div class="hook-name ext-center">
                          Deploy
                          <div class="process-bar"></div>
                        </div>
                      </div>
                    </div>
                    <div class="w-100 mt-5">
                      <ul class="connector" style="padding-left:25px;">
                        <li class="arrow-left" style="width: 135px;"></li>
                        <li class="arrow-right" style="width: 135px;"></li>
                        <li class="arrow-left" style="width: 135px;"></li>
                        <li class="arrow-right" style="width: 135px;"></li>
                        <li class="arrow-left" style="width: 135px;"></li>
                        <li class="arrow-right" style="width: 135px;"></li>
                      </ul>

                    </div>
                  </div>
                  <div class="row">
                    <div class="p-0">
                      <div class="hook-point-container" style="width: 265px">
                        <div class="hook-header">
                          <span class="label-header" >Hook Point PreBuild</span>
                          <a href="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/_createCustomHook/build/">
                            <button type="button" class="btn btn-upload show-modal" data-toggle="modal">Upload</button>
                          </a>
                        </div>
                        <div class="hook-added">
                          <ul class="sortable hook-items" >

                            <!--Add Custom Hook shown logic here -->
                            <j:forEach var="hook" items="${section.getCustomHookPreBuildList()}">
                              <!--<j:out value="${section.getElement()}"/>-->
                              <li class="ui-state-default active"><span class="ui-icon ui-icon-arrowthick-2-n-s"></span>


                                <span class="normal-state">
                                  <a class="btn-link" href="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/PRE_BUILD/job/${hook}/build/">
                                  <span class="hook-label" >${hook}</span>
                                  </a>
                                  <!--<span class="hook-edit d-none" ><input type="text" value=""/></span>-->
                                  <span class="action-icons pull-right ">
                                    <span class="icon-set d-none">
                                      <!--<i class="icon16 icon-edit-hook v-middle mr-5 di-block"></i>-->
                                      <a onclick="disableHook('${hook}', 'PRE_BUILD')">
                                        <i class="icon16 icon-disable-hook v-middle di-block"></i>
                                      </a>
                                    </span>
                                    <span class="icon-disable-set d-none">

                                      <j:set var="preBuildEnableRequest" value="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/PRE_BUILD/job/${hook}/enable"/>
                                      <j:set var="preBuildEnableHook" value="javascript:new Ajax.Request('${preBuildEnableRequest}', {method: 'post'});"/>
                                      <a onclick="${preBuildEnableHook}">
                                        <i class="icon16 icon-reset-hook v-middle mr-5 di-block"></i>
                                      </a>

                                      <j:set var="preBuildDeleteRequest" value="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/PRE_BUILD/job/${hook}/doDelete"/>
                                      <j:set var="preBuildDeleteHook" value="javascript:new Ajax.Request('${preBuildDeleteRequest}', {method: 'post'});"/>
                                      <p style="display:none">${hook},PRE_BUILD</p>
                                      <a onclick="$(this).siblings('p').addClass('tempDeleteClass');">
                                        <i class="icon16 icon-delete-hook v-middle di-block"></i>
                                      </a>

                                    </span>
                                    <span class="icon-edit-set d-none">
                                      <i class="icon16 icon-commit-hook v-middle mr-5 di-block"></i>
                                      <i class="icon16 icon-cancel-hook v-middle di-block"></i>
                                    </span>
                                  </span>
                                </span>
                              </li>
                            </j:forEach>
                          </ul>
                          <div class="no-hook d-none">
                            <div class="inner-content">

                            </div>
                          </div>
                        </div>
                        <div class="confirm-delete" style="display:none">
                          <div class="inner-content">
                            <p class="text-white">Do you want to delete selected "Hook"?</p>
                            <div class="btn-container">
                              <a href="javascript:void();" onclick="undoDeleteHook()" class="button-over cancel-delete button-over mr-5"> Cancel </a>
                              <button type="button" onclick="deleteHook()" class="btn btn-primary-m delete-confirm" >Yes</button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="hook-point-container" style="width: 265px">
                        <div class="hook-header">
                          <span class="label-header">Hook Point PostBuild</span>
                          <a href="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/_createCustomHook/build/">
                          <button type="button" class="btn btn-upload show-modal">Upload</button>
                          </a>
                        </div>
                        <div class="hook-added">
                          <ul class="sortable hook-items" >
                            <j:forEach var="hook" items="${section.getCustomHookPostBuildList()}">
                            <li class="ui-state-default active"><span class="ui-icon ui-icon-arrowthick-2-n-s"></span>

                              <span class="normal-state">
                                <a href="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/POST_BUILD/job/${hook}/build/">
                                <span class="hook-label" >${hook}</span>
                                </a>

                                <span class="hook-edit d-none" ><input type="text" value=""/></span>
                                <span class="action-icons pull-right ">
                                  <span class="icon-set d-none">

                                    <!--<i class="icon16 icon-edit-hook v-middle mr-5 di-block"></i>-->
                                    <a onclick="disableHook('${hook}', 'POST_BUILD')">
                                      <i class="icon16 icon-disable-hook v-middle di-block"></i>
                                    </a>
                                  </span>
                                  <span class="icon-disable-set d-none">
                                    <j:set var="enableRequest" value="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/POST_BUILD/job/${hook}/enable"/>
                                    <j:set var="enableHook" value="javascript:new Ajax.Request('${enableRequest}', {method: 'post'});"/>
                                    <a onclick="${enableHook}">
                                      <i class="icon16 icon-reset-hook v-middle mr-5 di-block"></i>
                                    </a>

                                    <j:set var="deleteRequest" value="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/POST_BUILD/job/${hook}/doDelete"/>
                                    <j:set var="deleteHook" value="javascript:new Ajax.Request('${deleteRequest}', {method: 'post'});"/>
                                    <p style="display:none">${hook},POST_BUILD</p>
                                    <a onclick="$(this).siblings('p').addClass('tempDeleteClass');">
                                      <i class="icon16 icon-delete-hook v-middle di-block"></i>
                                    </a>

                                  </span>
                                  <span class="icon-edit-set d-none">
                                    <i class="icon16 icon-commit-hook v-middle mr-5 di-block"></i>
                                    <i class="icon16 icon-cancel-hook v-middle di-block"></i>
                                  </span>
                                </span>
                              </span>
                            </li>
                            </j:forEach>
                          </ul>
                          <div class="no-hook d-none">
                            <div class="inner-content">
                            </div>
                          </div>
                        </div>
                        <div class="confirm-delete" style="display:none">
                          <div class="inner-content">
                            <p class="text-white"> Do you want to delete selected "Hook"?</p>
                            <div class="btn-container">
                              <a href="javascript:void();" onclick="undoDeleteHook()" class="button-over cancel-delete button-over mr-5"> Cancel </a>
                              <button type="button" onclick="deleteHook()" class="btn btn-primary-m delete-confirm" >Yes</button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="hook-point-container" style="width: 265px">
                        <div class="hook-header">
                          <span class="label-header">Hook Point PostTest</span>
                          <a href="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/_createCustomHook/build/">
                          <button type="button" class="btn btn-upload show-modal">Upload</button>
                          </a>
                        </div>
                        <div class="hook-added">
                          <ul class="sortable hook-items" >
                            <j:forEach var="hook" items="${section.getCustomHookPostTestList()}">
                              <li class="ui-state-default active"><span class="ui-icon ui-icon-arrowthick-2-n-s"></span>

                                <span class="normal-state">
                                  <a href="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/POST_TEST/job/${hook}/build/">
                                  <span class="hook-label" >${hook}</span>
                                  </a>

                                  <span class="hook-edit d-none" ><input type="text" value=""/></span>
                                  <span class="action-icons pull-right ">
                                    <span class="icon-set d-none">
                                      <!--<i class="icon16 icon-edit-hook v-middle mr-5 di-block"></i>-->

                                      <a onclick="disableHook('${hook}', 'POST_TEST')">
                                        <i class="icon16 icon-disable-hook v-middle di-block"></i>
                                      </a>
                                    </span>
                                    <span class="icon-disable-set d-none">
                                      <j:set var="postTestEnableRequest" value="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/POST_TEST/job/${hook}/enable"/>
                                      <j:set var="postTestEnableHook" value="javascript:new Ajax.Request('${postTestEnableRequest}', {method: 'post'});"/>
                                      <a onclick="${postTestEnableHook}">
                                        <i class="icon16 icon-reset-hook v-middle mr-5 di-block"></i>
                                      </a>

                                      <j:set var="postTestDeleteRequest" value="${rootURL}/job/${app.markupFormatter.translate(section.name)}/job/Visualizer/job/Builds/job/CustomHook/job/POST_TEST/job/${hook}/doDelete"/>
                                      <j:set var="postTestDeleteHook" value="javascript:new Ajax.Request('${postTestDeleteRequest}', {method: 'post'});"/>

                                      <p style="display:none">${hook},POST_TEST</p>

                                      <a onclick="$(this).siblings('p').addClass('tempDeleteClass');">
                                        <i class="icon16 icon-delete-hook v-middle di-block"></i>
                                      </a>
                                    </span>
                                    <span class="icon-edit-set d-none">
                                      <i class="icon16 icon-commit-hook v-middle mr-5 di-block"></i>
                                      <i class="icon16 icon-cancel-hook v-middle di-block"></i>
                                    </span>
                                  </span>
                                </span>
                              </li>
                            </j:forEach>
                          </ul>
                          <div class="no-hook d-none">
                            <div class="inner-content">

                            </div>
                          </div>
                        </div>
                        <div class="confirm-delete" style="display:none">
                          <div class="inner-content">
                            <p class="text-white">Do you want to delete selected "Hook"?</p>
                            <div class="btn-container">
                              <a href="javascript:void();" onclick="undoDeleteHook()" class="button-over cancel-delete button-over mr-5"> Cancel </a>
                              <button type="button" onclick="deleteHook()" class="btn btn-primary-m delete-confirm" >Yes</button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </section>
              </section>
            </div>
          </div>
        </div>
        <!--modal popup-->

      </section>
      <!-- Modal -->
      <div id="upload-hook" class="modal fade modal-generic" role="dialog">
        <div class="modal-dialog">

          <!-- Modal content-->
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal"></button>
              <h4 class="modal-title">Upload Custom Hook</h4>
            </div>
            <div class="modal-body">
              <div class="w-100 pl-15 pr-15 text-right">
                <a href="javascript:void(0);" class="font-size-14 d-block">Download Template</a>
              </div>
              <div class="w-100 pl-15 pr-15 mt-10">
                <div class="form-group mb-5">
                  <label class="font-size-14">Hook Name</label>
                  <input placeholder="Enter hook name" class="form-control input-text input-hook"/>
                </div>
                <div class="w-100 mt-15 upload-hook-container text-left">
                  <input id="fileupload" type="file"  visbility="hidden"/>
                  <a href="javascript:void(0);" class="font-size-14 d-block show-upload" type="file">Upload Hook</a>
                  <p class="mb-0 validation d-none">Please upload a JSON file.</p>
                  <div class="uploaded-hook-item font-size-14 w-70 d-none">testhook.json
                    <button type="button" class="close remove-hook"></button>
                  </div>
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-default btn-cancel" data-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn-primary-m confirm-save">Save</button>
            </div>
          </div>
        </div>

      </div>
      <!-- Notification messages -->
      <div id="service-created"></div>
      <!-- Notification messages -->

      <button onclick="printSequence()">Print Pre Build Sequence</button>

      <script type="text/javascript">
          function printSequence(){
            console.info ("print sequence");
            foo.printSequence();
          }
          function disableHook(hookName, stage){
            console.info("Disabled " + hookName + " in "+ stage + " stage")
            foo.disableHook(hookName, stage);
          }
        </script>
      <script src="${rootURL}/plugin/KonyCustomView/app-factory/js/custom.js"></script>

      <script>

        $( function() {
          $( ".sortable" ).sortable();
          $( ".sortable" ).disableSelection();
          $( ".sortable" ).sortable({ axis: 'y' });
        });
        $(function() {
          $( ".sortable" ).sortable({
              update: function(event, ui) {
                    console.log(ui.item)
                    var hookName = ui.item.find('.hook-label').text();
                    var updatedIndex = ui.item.index();
                    console.log('update: Index:'+ updatedIndex + " Hook:"  + hookName);

                    foo.updateSequence(updatedIndex, hookName)
              },
              start: function(event, ui) {
                  console.log('start: ' + ui.item.index() + ui.item.text())
              }
          });
          $( ".sortable" ).disableSelection();
        });
      </script>
    </body>
  </html>
</j:jelly>
